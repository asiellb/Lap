<?php

namespace Smh\AsteriskBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Smh\AsteriskBundle\Entity\Queues
 *
 * @ORM\Table(name="queues")
 * @ORM\Entity
 */
class Queues
{
    /**
     * @var string $name
     *
     * @ORM\Column(name="name", type="string", length=128, nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $name;

    /**
     * @var string $musiconhold
     *
     * @ORM\Column(name="musiconhold", type="string", length=128, nullable=true)
     */
    private $musiconhold;

    /**
     * @var string $announce
     *
     * @ORM\Column(name="announce", type="string", length=128, nullable=true)
     */
    private $announce;

    /**
     * @var string $context
     *
     * @ORM\Column(name="context", type="string", length=128, nullable=true)
     */
    private $context;

    /**
     * @var integer $timeout
     *
     * @ORM\Column(name="timeout", type="integer", nullable=true)
     */
    private $timeout;

    /**
     * @var boolean $monitorJoin
     *
     * @ORM\Column(name="monitor_join", type="boolean", nullable=true)
     */
    private $monitorJoin;

    /**
     * @var string $monitorFormat
     *
     * @ORM\Column(name="monitor_format", type="string", length=128, nullable=true)
     */
    private $monitorFormat;

    /**
     * @var string $queueYouarenext
     *
     * @ORM\Column(name="queue_youarenext", type="string", length=128, nullable=true)
     */
    private $queueYouarenext;

    /**
     * @var string $queueThereare
     *
     * @ORM\Column(name="queue_thereare", type="string", length=128, nullable=true)
     */
    private $queueThereare;

    /**
     * @var string $queueCallswaiting
     *
     * @ORM\Column(name="queue_callswaiting", type="string", length=128, nullable=true)
     */
    private $queueCallswaiting;

    /**
     * @var string $queueHoldtime
     *
     * @ORM\Column(name="queue_holdtime", type="string", length=128, nullable=true)
     */
    private $queueHoldtime;

    /**
     * @var string $queueMinutes
     *
     * @ORM\Column(name="queue_minutes", type="string", length=128, nullable=true)
     */
    private $queueMinutes;

    /**
     * @var string $queueSeconds
     *
     * @ORM\Column(name="queue_seconds", type="string", length=128, nullable=true)
     */
    private $queueSeconds;

    /**
     * @var string $queueLessthan
     *
     * @ORM\Column(name="queue_lessthan", type="string", length=128, nullable=true)
     */
    private $queueLessthan;

    /**
     * @var string $queueThankyou
     *
     * @ORM\Column(name="queue_thankyou", type="string", length=128, nullable=true)
     */
    private $queueThankyou;

    /**
     * @var string $queueReporthold
     *
     * @ORM\Column(name="queue_reporthold", type="string", length=128, nullable=true)
     */
    private $queueReporthold;

    /**
     * @var integer $announceFrequency
     *
     * @ORM\Column(name="announce_frequency", type="integer", nullable=true)
     */
    private $announceFrequency;

    /**
     * @var integer $announceRoundSeconds
     *
     * @ORM\Column(name="announce_round_seconds", type="integer", nullable=true)
     */
    private $announceRoundSeconds;

    /**
     * @var string $announceHoldtime
     *
     * @ORM\Column(name="announce_holdtime", type="string", length=128, nullable=true)
     */
    private $announceHoldtime;

    /**
     * @var integer $retry
     *
     * @ORM\Column(name="retry", type="integer", nullable=true)
     */
    private $retry;

    /**
     * @var integer $wrapuptime
     *
     * @ORM\Column(name="wrapuptime", type="integer", nullable=true)
     */
    private $wrapuptime;

    /**
     * @var integer $maxlen
     *
     * @ORM\Column(name="maxlen", type="integer", nullable=true)
     */
    private $maxlen;

    /**
     * @var integer $servicelevel
     *
     * @ORM\Column(name="servicelevel", type="integer", nullable=true)
     */
    private $servicelevel;

    /**
     * @var string $strategy
     *
     * @ORM\Column(name="strategy", type="string", length=128, nullable=true)
     */
    private $strategy;

    /**
     * @var string $joinempty
     *
     * @ORM\Column(name="joinempty", type="string", length=128, nullable=true)
     */
    private $joinempty;

    /**
     * @var string $leavewhenempty
     *
     * @ORM\Column(name="leavewhenempty", type="string", length=128, nullable=true)
     */
    private $leavewhenempty;

    /**
     * @var boolean $eventmemberstatus
     *
     * @ORM\Column(name="eventmemberstatus", type="boolean", nullable=true)
     */
    private $eventmemberstatus;

    /**
     * @var boolean $eventwhencalled
     *
     * @ORM\Column(name="eventwhencalled", type="boolean", nullable=true)
     */
    private $eventwhencalled;

    /**
     * @var boolean $reportholdtime
     *
     * @ORM\Column(name="reportholdtime", type="boolean", nullable=true)
     */
    private $reportholdtime;

    /**
     * @var integer $memberdelay
     *
     * @ORM\Column(name="memberdelay", type="integer", nullable=true)
     */
    private $memberdelay;

    /**
     * @var integer $weight
     *
     * @ORM\Column(name="weight", type="integer", nullable=true)
     */
    private $weight;

    /**
     * @var boolean $timeoutrestart
     *
     * @ORM\Column(name="timeoutrestart", type="boolean", nullable=true)
     */
    private $timeoutrestart;

    /**
     * @var string $periodicAnnounce
     *
     * @ORM\Column(name="periodic_announce", type="string", length=50, nullable=true)
     */
    private $periodicAnnounce;

    /**
     * @var integer $periodicAnnounceFrequency
     *
     * @ORM\Column(name="periodic_announce_frequency", type="integer", nullable=true)
     */
    private $periodicAnnounceFrequency;


}